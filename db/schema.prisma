generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Area {
  cinemas   Cinema[]
  label     String     @unique
  showtimes Showtime[]
  slug      String     @id @unique
}

model Cinema {
  area      Area         @relation(fields: [areaSlug], references: [slug])
  areaSlug  String
  name      String       @unique
  names     CinemaName[]
  showtimes Showtime[]
  slug      String       @id @unique
}

model CinemaName {
  cinema     Cinema?  @relation(fields: [cinemaSlug], references: [slug])
  cinemaSlug String?
  createdAt  DateTime @default(now())
  name       String   @id @unique
}

model EmailVerification {
  code      String
  email     String   @unique
  updatedAt DateTime @updatedAt()
}

model Feature {
  label     String     @unique
  showtimes Showtime[]
  slug      String     @id @unique
}

model Movie {
  id        String       @id @default(uuid())
  poster    String       @unique
  showtimes Showtime[]
  title     String       @unique
  titles    MovieTitle[]
}

model MovieTitle {
  createdAt DateTime @default(now())
  movie     Movie?   @relation(fields: [movieId], references: [id])
  movieId   String?
  title     String   @id @unique
}

model Showtime {
  id         String    @id @default(uuid())
  areas      Area[]
  cinema     Cinema    @relation(fields: [cinemaSlug], references: [slug])
  cinemaSlug String
  end        DateTime
  features   Feature[]
  movie      Movie     @relation(fields: [movieId], references: [id])
  movieId    String
  start      DateTime

  @@unique(fields: [cinemaSlug, movieId, start])
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  email     String   @unique
  isAdmin   Boolean  @default(false)
}
