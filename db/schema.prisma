generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Area {
  cinemas   Cinema[]
  label     String     @unique
  showtimes Showtime[]
  slug      String     @id @unique
}

model Cinema {
  area      Area         @relation(fields: [areaSlug], references: [slug])
  areaSlug  String
  name      String
  names     CinemaName[]
  showtimes Showtime[]
  slug      String       @id @unique

  @@unique([areaSlug, name])
}

model CinemaName {
  cinema     Cinema?  @relation(fields: [cinemaSlug], references: [slug])
  cinemaSlug String?
  createdAt  DateTime @default(now())
  name       String   @id @unique
}

model EmailVerification {
  code      String
  email     String   @unique
  updatedAt DateTime @updatedAt()
}

model Feature {
  label       String       @unique
  movieTitles MovieTitle[]
  slug        String       @id @unique
}

model Movie {
  id        Int          @id
  poster    String       @unique
  showtimes Showtime[]
  title     String       @unique
  titles    MovieTitle[]
}

model MovieTitle {
  createdAt DateTime   @default(now())
  features  Feature[]
  movie     Movie?     @relation(fields: [movieId], references: [id])
  movieId   Int?
  showtimes Showtime[]
  title     String     @id @unique
}

model Showtime {
  id              String     @id @default(uuid())
  area            Area       @relation(fields: [areaSlug], references: [slug])
  areaSlug        String
  cinema          Cinema     @relation(fields: [cinemaSlug], references: [slug])
  cinemaSlug      String
  end             DateTime
  movie           Movie      @relation(fields: [movieId], references: [id])
  movieId         Int
  movieTitle      MovieTitle @relation(fields: [movieTitleTitle], references: [title])
  movieTitleTitle String
  start           DateTime

  @@unique(fields: [cinemaSlug, movieTitleTitle, start])
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  email     String   @unique
  isAdmin   Boolean  @default(false)
}
